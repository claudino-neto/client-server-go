package main

import (
	"fmt"
	"net"
)

func main() {
	// Establishing TCP Connection
	fmt.Println("Server Running...")
	listener, err := net.Listen("tcp", "localhost:8080")
	if err != nil {
		fmt.Printf("Error while listening: %s\n", err.Error())
	}
	fmt.Println("Listening on \"localhost:8080\"")
	fmt.Println("Waiting for Client to connect...")

	defer listener.Close()
	for {
		connection, err := listener.Accept()
		if err != nil {
			fmt.Printf("Error with connection: %s\n", err.Error())
		}
		fmt.Println("Client connection estabilished!")

		go handleConnection(connection)
	}
}

func handleConnection(connection net.Conn) {
	defer connection.Close()
	buffer := make([]byte, 1024)
	msgLen, err := connection.Read(buffer)
	if err != nil {
		fmt.Printf("Error reading message: %s\n", err.Error())
	}
	fmt.Println("Message received: ", string(buffer[:msgLen]))

	_, err = connection.Write([]byte("Your message has been delivered.\nMessage: " + string(buffer[:msgLen])))
	if err != nil {
		fmt.Printf("Error writing message: %s\n", err.Error())
	}
}
